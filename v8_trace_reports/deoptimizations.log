[deoptimizing (DEOPT eager): begin 0x7b5910fb741 isObject (opt #0) @2, FP to SP delta: 24]
[deoptimizing (DEOPT eager): begin 0x7b5910c7141 matchKeyword (opt #36) @2, FP to SP delta: 32]
[deoptimizing (DEOPT eager): begin 0x7b5910c70f9 match (opt #35) @2, FP to SP delta: 24]
[deoptimizing (DEOPT eager): begin 0x7b5910c70f9 match (opt #41) @2, FP to SP delta: 24]
[deoptimizing (DEOPT soft): begin 0x7b5910c6529 skipComment (opt #48) @14, FP to SP delta: 96]
[deoptimizing (DEOPT eager): begin 0x7b5910c7b19 parseConditionalExpression (opt #51) @50, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x7b5910c7b19 parseConditionalExpression (opt #51) @2, FP to SP delta: 104]
[deoptimizing (DEOPT eager): begin 0x7b5910cd869 Node.finishMemberExpression (opt #60) @10, FP to SP delta: 24]
[deoptimizing (DEOPT lazy): begin 0x7b5910c79f9 parsePostfixExpression (opt #71) @2, FP to SP delta: 72]
[deoptimizing (DEOPT lazy): begin 0x7b5910c79f9 parsePostfixExpression (opt #71) @2, FP to SP delta: 72]
[deoptimizing (DEOPT eager): begin 0x7b5910cd791 Node.finishLiteral (opt #73) @16, FP to SP delta: 24]
[deoptimizing (DEOPT soft): begin 0x7b5910c6529 skipComment (opt #59) @26, FP to SP delta: 104]
[deoptimizing (DEOPT eager): begin 0x7b5910c7b19 parseConditionalExpression (opt #74) @46, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x7b5910c7b19 parseConditionalExpression (opt #74) @38, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x7b5910c7b19 parseConditionalExpression (opt #74) @38, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x7b5910c7b19 parseConditionalExpression (opt #74) @38, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x7b5910c7b19 parseConditionalExpression (opt #74) @38, FP to SP delta: 104]
[deoptimizing (DEOPT eager): begin 0x7b5910c7a89 binaryPrecedence (opt #72) @21, FP to SP delta: 32]
[deoptimizing (DEOPT eager): begin 0x7b5910c7cc9 parseAssignmentExpression (opt #79) @24, FP to SP delta: 80]
[deoptimizing (DEOPT lazy): begin 0x7b5910c7cc9 parseAssignmentExpression (opt #79) @7, FP to SP delta: 80]
[deoptimizing (DEOPT eager): begin 0x172e7483ce69 matchAssign (opt #65) @5, FP to SP delta: 24]
[deoptimizing (DEOPT lazy): begin 0x172e7481e6e1 parseAssignmentExpression (opt #79) @7, FP to SP delta: 80]
[deoptimizing (DEOPT lazy): begin 0x172e7481e6e1 parseAssignmentExpression (opt #79) @7, FP to SP delta: 80]
[deoptimizing (DEOPT eager): begin 0x172e7481e7b9 parseStatement (opt #88) @64, FP to SP delta: 184]
[deoptimizing (DEOPT eager): begin 0x172e7483d691 Node.finishExpressionStatement (opt #87) @7, FP to SP delta: 24]
[deoptimizing (DEOPT lazy): begin 0x172e7481e7b9 parseStatement (opt #88) @127, FP to SP delta: 184]
[deoptimizing (DEOPT lazy): begin 0x172e7481e7b9 parseStatement (opt #88) @46, FP to SP delta: 184]
[deoptimizing (DEOPT lazy): begin 0x172e7481e7b9 parseStatement (opt #88) @62, FP to SP delta: 184]
[deoptimizing (DEOPT lazy): begin 0x172e7481e7b9 parseStatement (opt #88) @127, FP to SP delta: 184]
[deoptimizing (DEOPT lazy): begin 0x172e7481e7b9 parseStatement (opt #88) @46, FP to SP delta: 184]
[deoptimizing (DEOPT soft): begin 0x172e7483d2a1 scanStringLiteral (opt #89) @29, FP to SP delta: 144]
[deoptimizing (DEOPT eager): begin 0x172e7481e699 parseConditionalExpression (opt #96) @46, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x172e7481e699 parseConditionalExpression (opt #96) @38, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x172e7481e699 parseConditionalExpression (opt #96) @38, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x172e7481e699 parseConditionalExpression (opt #96) @38, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x172e7481e699 parseConditionalExpression (opt #96) @38, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x172e7481e699 parseConditionalExpression (opt #96) @38, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x172e7481e699 parseConditionalExpression (opt #96) @2, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x172e7481e699 parseConditionalExpression (opt #96) @2, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x172e7481e699 parseConditionalExpression (opt #96) @2, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x172e7481e699 parseConditionalExpression (opt #96) @2, FP to SP delta: 104]
[deoptimizing (DEOPT lazy): begin 0x172e7481e699 parseConditionalExpression (opt #96) @2, FP to SP delta: 104]
[deoptimizing (DEOPT eager): begin 0x172e7481e6e1 parseAssignmentExpression (opt #106) @30, FP to SP delta: 88]
[deoptimizing (DEOPT soft): begin 0x172e7483d2a1 scanStringLiteral (opt #110) @40, FP to SP delta: 144]
[deoptimizing (DEOPT soft): begin 0x172e7481e411 advance (opt #52) @39, FP to SP delta: 32]
[deoptimizing (DEOPT soft): begin 0x381598e2d109 slice (opt #46) @10, FP to SP delta: 48]
[deoptimizing (DEOPT soft): begin 0x172e7482e841 parens (opt #146) @5, FP to SP delta: 24]
[deoptimizing (DEOPT eager): begin 0x172e7482e841 parens (opt #152) @2, FP to SP delta: 24]
[deoptimizing (DEOPT eager): begin 0x172e748312d9 Object.defineProperty.get (opt #167) @7, FP to SP delta: 24]
[deoptimizing (DEOPT eager): begin 0x172e748312d9 Object.defineProperty.get (opt #177) @7, FP to SP delta: 24]
[deoptimizing (DEOPT soft): begin 0x172e7484ae71 nodes.ExpressionStatement (opt #172) @61, FP to SP delta: 248]
[deoptimizing (DEOPT lazy): begin 0x172e7484ae71 nodes.ExpressionStatement (opt #172) @18, FP to SP delta: 248]
[deoptimizing (DEOPT eager): begin 0x172e748312d9 Object.defineProperty.get (opt #182) @7, FP to SP delta: 24]
[deoptimizing (DEOPT eager): begin 0x172e748312d9 Object.defineProperty.get (opt #185) @7, FP to SP delta: 24]
[deoptimizing (DEOPT eager): begin 0x172e748312d9 Object.defineProperty.get (opt #188) @7, FP to SP delta: 24]
